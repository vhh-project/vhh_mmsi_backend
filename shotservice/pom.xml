<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>eu.vhhproject.mmsi.shotservice</groupId>
	<artifactId>mmsi-shotservice</artifactId>
	<version>1.0.3-SNAPSHOT</version>

	<name>VHH-MMSI Shot Service</name>
	<description>The shot service in the VHH-MMSI system</description>

	<properties>
		<java.version>14</java.version>

		<!-- Skip javadoc generation as it is not used / required -->
		<!-- If enabling javadoc in the future, be aware that "enable-preview" -->
		<!-- must be set in the javadoc plugin to allow proper compilation if preview -->
		<!-- features are used -->
		<maven.javadoc.skip>true</maven.javadoc.skip>

		<!-- Docker deployment -->
		<docker.image.prefix>docker.max-recall.com/vhh/mmsi</docker.image.prefix>
		<docker.image.tag>latest</docker.image.tag>

		<org.mapstruct.version>1.3.1.Final</org.mapstruct.version>
		
	</properties>

	<dependencies>
		<!-- Spring Boot Essentials -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Development -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<!-- Application management and monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Data processing -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>

		<!-- API Documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>

		<!-- Required for including constraints on the models in the Swagger UI -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>2.9.2</version>
		</dependency>
		
		<!-- Flyway DB Migrations -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

	</dependencies>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>releases</name>
			<url>https://nexus.max-recall.com/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>releases</name>
			<url>https://nexus.max-recall.com/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<scm>
		<connection>scm:svn:https://svn.max-recall.com/maxrecall/customer/vhh/mmsi/shotservice/trunk</connection>
		<developerConnection>scm:svn:https://svn.max-recall.com/maxrecall/customer/vhh/mmsi/shotservice/trunk</developerConnection>
	</scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>--enable-preview</jvmArguments>
				</configuration>
				<executions>
					<execution>
						<goals>
							<!-- Write build information to META-INF directory -->
							<!-- https://docs.spring.io/spring-boot/docs/2.2.4.RELEASE/reference/htmlsingle/#howto-build-info -->

							<!-- This also gets picked up by the actuator endpoint -->
							<!-- https://docs.spring.io/spring-boot/docs/2.2.4.RELEASE/reference/htmlsingle/#production-ready-application-info-build -->
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgs>
						<arg>--enable-preview</arg>
						<arg>-Amapstruct.defaultComponentModel=spring</arg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>--enable-preview</argLine>
				</configuration>
			</plugin>

			<!-- Use build number plugin to include SVN revision number in build. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>true</doUpdate>
				</configuration>
			</plugin>
			
			<!-- Use build helper plugin to set the build timestamp in timezone Europe/Vienna -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>buildTime</name>
							<pattern>yyyy-MM-dd HH:mm:ssX</pattern>
							<locale>de_AT</locale>
							<timeZone>Europe/Vienna</timeZone>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.13</version>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<tag>${docker.image.tag}</tag>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
